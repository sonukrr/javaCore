1. Output of following code


			try{
				
				System.out.print("From try block");
			}
			System.out.print("after try");
			catch(Exception e){
				
				System.out.print("catch block");
			}finally{
				
				System.out.print("finally block");
			}

a.From catch block after try catch block finally block
b. no output 
c. compile time error 
d. runtime error

ANS:-c

2.Output of following code

class Rodent {

protected static Integer chew() throws Exception{
	
	System.out.println("Rodent is chewing");
	return 1;
}



}
class Beaver extends Rodent{
	public Integer chew()throws RuntimeException{
		
		System.out.println("Beaver is chewing on wood");
		return 2;
	}
	
}


a.compile without issues
b. it fails to compile because the type of exception the method throws of a subclass is of type parent method throws
c.it compiles and run
d. none

ANS:-d

3.Output of following code

 class Mammal{

public Mammal(int age){
	
}


}
class Hippopotamus extends Mammal{
	public Hippopotamus(){
		System.out.println("2");
	}
}

a. compile without issues
b.it fails to compiles
c.compiles but produce error at runtime
d.it prints 2

ANS:-b


4.Output of following code

class Flower{}

public class D {

	void pollinate(Flower flower){
		System.out.println(1);
	}
void pollinate(Flower... flower){
	System.out.println(2);
}


void pollinate(int... noOfFlower){
	System.out.println(2);
}
				
void pollinate(Integer noOfFlower){
	System.out.println(3);
}

void pollinate(String s){
	System.out.println(4);
}
void pollinate(Object o){
	System.out.println(5);
}				
					
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		D d=new D();
		d.pollinate(new Flower());
		/// will print 1
		
//		
	}


a. 1 b. 2 c 4 d .5

ANS:-a

5. when we execute this line  		
System.out.println(5/0);

a. compiles but  runtime exception
b. print infinity
c. compile time error
d.none

ANS:-a
		
6.when string object is eligible for garbage collection
public class F {
	
	
	public static String getNamae(){
		String s=new String("jane doe");
	return s;	
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		String result=F.getNamae();//line 1
		System.out.println(result);//line 2
		result=null;//line 3
		System.gc();
	}

}


a. immediately after line 2
b. immediately after line 3
c. immediately after line 4
d. no object is garbage collected

ANS:-b

7.Output of following code

		String tiger="tiger";
		String loin="lion";
		
		final String stmt=250>338?loin:tiger="is bigger";//line 5

				System.out.println(stmt);

a. tiger
b.loin
c.tiger is bigger
d.loin is bigger
e.error at line 

ANS:-e

8.Output of following code
public class J {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		J j1=new J();
		J j2=new J();
		
		j1=j2;
		j2=null;
		j1=null;
	}
	protected void  finalizee(Object o) {
		System.out.println("deleted");
	}

}

a. deleted is never printed
b. deleted is printed once
c. deleted is printed twice
d.compilation fails
e.none

ANS:-a

9.Output of following code
		 String s1="java";
		StringBuilder  sb=new StringBuilder("java");
		if(s1==sb)
			System.out.println(1);
		if(s1.equals(sb))
			System.out.println(2);

a. 1
b. 2
c.compile time error
d.exception is thrown
e.12

ANS:-c

10.Output of following code

		int i=0;
		try{
			
			i+=1;
			e();
			i+=2;
			
			
		}finally{
			i+=8;
			
		}catch(Exception e){
			i+=4;
			
		}

		System.out.println(i);
	}

	private static void e(){
		
		throws new IllegalAccessException();
	}
	
  a.5
  b. exception is thrown
  c.code wont compile
  d.no output;
  e.none

ANS:-c



11.Output of following code

		int x=10%2+1;
		switch (x) {
		case :0
			System.out.println("Zero");
			break;

		case 1:
			System.out.println("One");
			
			break;
			default: System.out.println("default");
		}
		

a. One
b.Zero
c.default
d.compile time error
e.none

ANS:-d

12. Output of following code

		int x=4;
		if(x<=5 ^ x==4){
			System.out.print("Low");
			
		}else if(x==4){
			
			System.out.print("Match");
		}if(x>1)System.out.print("High");
		

a.  low
b. High
c Match
d MatchHigh
e.compile time error

ANS:-d


13.Output of following code

LocalDate date=LocalDate.of(2018, Month.APRIL, 30);
		date.plusDays(2);
		date.plusYears(3);
		System.out.println(date.getYear()+" "+date.getMonth()+" "+date.getDayOfMonth());


a. 2021 JULY 30
b. 2018 APRIL 30
c. 2022 MAY 2
d .none

ANS:-b

14.Output of following code



	LocalDate date=LocalDate.ofYearDay(2015, 5);
		Period p= Period.of(1, 2, 3);

		date=p.minus(p);
		
		DateTimeFormatter dfm=DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT);
		System.out.println(dfm.format(date));


a.6/10/15 11;22 AM
b. runtime error
c. compile time error
d. NONE

ANS:-c


15. Which method signature comes for Albatross sub class*/
abstract class SeaBBird{
	
	public abstract void fly(int height) ;
		
	
}

 abstract class Albatross{
	abstract Long fly();
}

class Mo extends Albatross{
	
	Long fly(){return 1L;}
}



public class Q {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}


 
 a. Long fly()
 b.public Number fly()
 c.compile time erroe
 d. runtime error

ANS:-a
 
16.Output of following code
		int x=4;
		long y=x*4+x++;
		if(y<10){
			
			System.out.println("Too Low");
		}else{
			
			System.out.println("just right");
		}
		//else System.out.println("too high");



a. Too Low
b.  just right
c. compile time error
d. runtime error

ANS:-b

17. Output of following code
		char value='c';
		
		do System.out.print(value++);
	    while(value<='f');

a. cdef
b. def
c.defg
f.compile time error
g. none

ANS:-a

18. Output of following code

String letters="abcdef";
		System.out.print(letters.length());
		System.out.print(letters.charAt(3));
System.out.println(letters.charAt(5));

a. 6df
b. 5df
c. Compile time error
d. runtime exception

ANS:-a

19. 	Output of following code
		int j=1;
		for(int i=0;i<4&&j<3;++i){
			++j;
			System.out.print(i+j);
		}


a. 24
b.0123
c.compiles but not run
d. none

ANS:-a

20.Output of following code

String a="";
		a+=2;
		a+='c';
		a+=false;
		if(a=="2cfalse")System.out.println("==");
		if(a.equals("2cfalse"))System.out.println("equals");
a. ==
b. equals
c.== and equals
d. commpile time error


ANS:-b


21. Output of following code
public class W {

	String seq="c";
	static{
		
		seq+="g";
	}
	{seq+="z"}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		W w1=new W();
		W w2=new W();
	System.out.println(w1.seq);	
		
	}

}


a. cgz
b. compile time error
c. runtime error
d.none

ANS:-b


22. Output of following code

String s="abcde";
   s.toUpperCase();
   s.substring(1,3);
   s+="two";
	System.out.println(s.length());
	

a. 5
b.8
c.compile time rror
d. runtime error

ANS:-b


23. 
You define the following interface for global geographic coordinates:

public interface GeoCoordinate {
LatLon getLatLon();
// new behavior to be added here
}

The project also contains classes that implement the interfaces RouteEngine to determine routes and RouteInfo to represented related information, such as costs and elapsed time, based on the mode of transport.

You need to retrieve RouteInfo using the RouteEngine and number of GeoCoordinate objects. Which method declaration should you add to the RouteInfo interface?

a.static RouteInfo getRouteInfo(RouteEngine re, GeoCoordinate ... points) {
// implementation omitted
}

b.public RouteInfo getRouteInfo(RouteEngine re, GeoCoordinate ... points) {
// implementation omitted
}

c.default RouteInfo getRouteInfo(RouteEngine re, GeoCoordinate ... points) {
// implementation omitted
}

e.static abstract RouteInfo getRouteInfo(RouteEngine re, GeoCoordinate ... points);
	


a. a b
b. b c
c. c d 
d. a c

ANS:-d



24. 

what is the output of the following code

public class ExampleIf{
public static void main(String args[]){
int x=10;
if(x=20)
{
System.out.println(x);
}else{
System.out.println(x);
}}}


a. 10  b. 20 c.compiletile error d.runtime errror

ANS:-c	

25.Output of following code

public class ExampleSwitch{
public static void main(String args[]){
String x="10";
int y=20;
switch(x)
{
case 10:
System.out.println("10");
case y:
System.out.println("20");
}}}


a. 10  b. 20 c.compiletime error d.runtime errror

ANS:-c

26.  Output of following code  
                  	while(true)
			{
			int x=10;
			}
			System.out.println("hai");
		
a. 10  b. 20 c.compiletime error d.runtime errror

ANS:-c

27.Output of following code

import java.util.*
import java.sql.*;
class Test
{
public static void main(String args[])
{
Date d=new Date();
}}

a. current date  2. current time c.compile time error d. runtime error

ANS:-c

28. Output for following code


public  class Parent
{
public abstract final void methodOne();
}

public class Child extends Parent{

public  void methodOne(){
System.out.print("One");
}


public static void main(String ...[]){
Chilc c=new Child();
c.methodOne();
}

}
a.One b. no output c. compile time error d. runtime error

ANS:-c

29.Output of following code

abstract class Parent
{
public abstract void methodOne();
public abstract void methodTwo();
}
class child extends Parent
{
public void methodOne(){
System.out.print("One");

}

public static void main(String ...args){
Chilc c=new Child();
c.methodOne();
}


}

a.One b. no output c. compile time error d. runtime error

ANS:-c

30.Output of following code

    try{
				
				System.out.println("From try block");
			}
			System.out.print("after try");
			catch(Exception e){
				
				System.out.println("catc block");
			}finally{
				
				System.out.println("finally block");
			}


a. from try block after try block catch block finally block
b.try block catch block finally block
c.compile time error
d. runtime error

ANS :-c

